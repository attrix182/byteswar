#!/bin/bash

# Script para diagnosticar el servidor BytesWar en producci√≥n

SERVER_URL="http://byteswar.31.97.151.147.sslip.io"

echo "üîç Diagn√≥stico del servidor BytesWar"
echo "=================================="
echo "URL del servidor: $SERVER_URL"
echo ""

# Funci√≥n para hacer requests con timeout
make_request() {
    local endpoint=$1
    local description=$2
    
    echo "üì° Probando: $description"
    echo "   URL: $SERVER_URL$endpoint"
    
    response=$(curl -s -w "\nHTTP_CODE:%{http_code}\nTIME:%{time_total}s" --max-time 10 "$SERVER_URL$endpoint" 2>/dev/null)
    
    if [ $? -eq 0 ]; then
        http_code=$(echo "$response" | grep "HTTP_CODE:" | cut -d: -f2)
        time_taken=$(echo "$response" | grep "TIME:" | cut -d: -f2)
        body=$(echo "$response" | sed '/HTTP_CODE:/d' | sed '/TIME:/d')
        
        echo "   ‚úÖ Status: $http_code"
        echo "   ‚è±Ô∏è  Tiempo: ${time_taken}s"
        echo "   üìÑ Respuesta: $body"
    else
        echo "   ‚ùå Error: Timeout o conexi√≥n fallida"
    fi
    echo ""
}

# Probar diferentes endpoints
make_request "/health" "Health Check"
make_request "/debug" "Debug Endpoint"
make_request "/api/status" "API Status"
make_request "/api/players" "API Players"
make_request "/" "P√°gina Principal"

echo "üîß Informaci√≥n adicional:"
echo "=========================="

# Verificar si el puerto est√° abierto
echo "üîå Verificando puerto 3001..."
nc -z 31.97.151.147 3001 2>/dev/null
if [ $? -eq 0 ]; then
    echo "   ‚úÖ Puerto 3001 est√° abierto"
else
    echo "   ‚ùå Puerto 3001 est√° cerrado"
fi

# Verificar DNS
echo "üåê Verificando DNS..."
nslookup byteswar.31.97.151.147.sslip.io 2>/dev/null | grep -E "(Name|Address)"
if [ $? -eq 0 ]; then
    echo "   ‚úÖ DNS resuelve correctamente"
else
    echo "   ‚ùå Problema con DNS"
fi

echo ""
echo "üìã Comandos √∫tiles para debugging:"
echo "=================================="
echo "‚Ä¢ Ver logs del contenedor: docker logs <container_id>"
echo "‚Ä¢ Verificar estado del contenedor: docker ps"
echo "‚Ä¢ Probar conectividad: curl -v $SERVER_URL/health"
echo "‚Ä¢ Verificar puertos: netstat -tulpn | grep 3001" 